공부한 다양한 패턴을 메모장 형태로 실제로 적용해 본다.

1. Strategy Pattern
	다른 종류의 메모장의 행동을 캡슐화하기 위해 스트래티지 패턴 사용.
	예를들어 텍스트메모장, 파일(이미지 등)이 포함된 메모장 , D-day 가 있는 메모장 등이 있을때
	다른 메모장이 추가되기 용이하고 서로 다른 행동을 할 수 있게 한다.
	
	공통행동 write(), read(), modify(), delete() 등 
	
	1) 메모장들은 모두 Memo의 자식클래스
		무조건 존재하는 Memo 고유의 동작, 상태를 나타냄
	2) 옵션들은 인터페이스로 구현한다.
		예를들어 이미지메모장은 HaveFile > HaveImageFile 을 구현.
	